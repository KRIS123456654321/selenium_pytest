# _*_ coding:utf-8 _*_
# @Time    :2019/10/21 10:17
# @Author  :xiuhong.guo
# @Email   :892336120@qq.com
# @File    :combat-1.py

# PO模式-项目，，100个web用例

# 以前面的作业的形式来写的弊端：
# 1.元素定位发生了变化，需要找到元素在哪些文件中，并修改代码
# 2.相同的功能,要找到哪些地方用到了这些功能
# 3.不方便维护,拓展

# PageObject-PO模式-页面对象

# 接口-数据驱动的模式-按功能模块区分-因为接口的流程都是发送 接收 断言

# web自动化-说点哪就点哪-没有共性可言-不能用接口那种形式来写脚本
# 假设：30个页面-100/500/1000-用例
# web自动化-所有的步骤和断言，都是依赖页面，都是操作页面
# 用例：业务流程-不同页面的操作串起来的 + 结果比对（查看页面的变化）
# 把30个页面，封装起来--把页面的功能封装起来（函数）+ 元素定位（属性）--类--30个类，一个页面一个类
# 如：登录类、课程列表类、课程详情类、考勤类、同学类等
# 用例1：登录类-功能，课程列表类-功能，课程详情类-功能，考勤类-功能 + 断言操作
# 用例2：登录类-功能，课程列表类-功能，课程详情类-功能，同学类-功能 + 断言操作

# 结论：
# 第一步：封装页面
# 第二步：测试用例=页面对象（提供功能）+ 测试数据




























